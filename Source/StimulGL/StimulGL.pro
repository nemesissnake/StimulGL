# ----------------------------------------------------
# This file is generated by the Qt Visual Studio Add-in.
# ------------------------------------------------------



#win32:CONFIG(release, debug|release): LIBS += -L$$PWD/../../All-build-desktop/Plugins/ParallelPortDevice/Win32/release/ -lparallelportplugin_Win32_Debug
#else:win32:CONFIG(debug, debug|release): LIBS += -L$$PWD/../../All-build-desktop/Plugins/ParallelPortDevice/Win32/debug/ -lparallelportplugin_Win32_Debug
#else:symbian: LIBS += -lparallelportplugin_Win32_Debug
#else:unix: LIBS += -L$$PWD/../../All-build-desktop/Plugins/ParallelPortDevice/Win32/ -lparallelportplugin_Win32_Debug

#INCLUDEPATH += $$PWD/../../All-build-desktop/Plugins/ParallelPortDevice/Win32/Debug
#DEPENDPATH += $$PWD/../../All-build-desktop/Plugins/ParallelPortDevice/Win32/Debug

TEMPLATE = app
QT += core gui sql xml script scripttools svg opengl
DEFINES += QT_LARGEFILE_SUPPORT QT_DLL QT_SVG_LIB QT_XML_LIB QT_OPENGL_LIB
INCLUDEPATH +=  . \
                ./GeneratedFiles
DEPENDPATH +=   .
UI_DIR += ./GeneratedFiles
RCC_DIR += ./GeneratedFiles
LIBS += -lwinmm
RC_FILE = $$PWD/StimulGL.rc
QMAKE_RC = rc -D_MSC_VER
include(StimulGL.pri)

contains(QMAKE_HOST.os,Windows){
    contains(QMAKE_HOST.arch,x86_64){
        message("$$QMAKE_HOST.arch on $$QMAKE_HOST.os")
        LIBS += -linpoutx64
        LIBS += -lgdi32 \
                -luser32
        CONFIG(debug, debug|release){
            LIBS += -lqscintilla2d \
                     -L./../Plugins/ParallelPortDevice/x64/Debug/ -lparallelportplugin_x64d \
                     -L./../Plugins/ExperimentManager/x64/Debug/ -lExperimentManagerplugin_x64d
            QTPLUGIN += ./../Plugins/ParallelPortDevice/x64/Debug/parallelportplugin_x64 #Additional 'd' is automatically added!
            DESTDIR = x64/Debug
            TARGET = StimulGL_x64_Debug
            INCLUDEPATH += x64/Debug
            MOC_DIR += x64/Debug
            OBJECTS_DIR += x64/Debug
            message("Building a x64_Debug")
        }
        CONFIG(release, debug|release){
            LIBS += -lqscintilla2 \
                     -L./../Plugins/ParallelPortDevice/x64/Release/ -lparallelportplugin_x64 \
                     -L./../Plugins/ExperimentManager/x64/Release/ -lExperimentManagerplugin_x64
            QTPLUGIN += ./../Plugins/ParallelPortDevice/x64/Release/parallelportplugin_x64
            DESTDIR = x64/Release
            TARGET = StimulGL_x64_Release
            INCLUDEPATH += x64/Release
            MOC_DIR += x64/Release
            OBJECTS_DIR += x64/Release
            message("Building a x64_Release")
        }
    }
    else{
        contains(QMAKE_HOST.arch,x86){
            message("$$QMAKE_HOST.arch on $$QMAKE_HOST.os")
            LIBS += -linpout32
            LIBS += -lgdi32 \
                    -luser32
            CONFIG(debug, debug|release){
                LIBS += -lqscintilla2d \
                        -L./../Plugins/ParallelPortDevice/Win32/Debug/ -lparallelportplugin_Win32d \
                        -L./../Plugins/ExperimentManager/Win32/Debug/ -lExperimentManagerplugin_Win32d
                QTPLUGIN += ./../Plugins/ParallelPortDevice/Win32/Debug/parallelportplugin_Win32 #Additional 'd' is automatically added!
                DESTDIR = Win32/Debug
                TARGET = StimulGL_Win32_Debug
                INCLUDEPATH += Win32/Debug
                MOC_DIR += Win32/Debug
                OBJECTS_DIR += Win32/Debug
                message("Building a Win32_Debug")
            }
            CONFIG(release, debug|release){
                LIBS += -lqscintilla2 \
                        -L./../Plugins/ParallelPortDevice/Win32/Release/ -lparallelportplugin_Win32 \
                        -L./../Plugins/ExperimentManager/Win32/Release/ -lExperimentManagerplugin_Win32
                QTPLUGIN += ./../Plugins/ParallelPortDevice/Win32/Release/parallelportplugin_Win32
                DESTDIR = Win32/Release
                TARGET = StimulGL_Win32_Release
                INCLUDEPATH += Win32/Release
                MOC_DIR += Win32/Release
                OBJECTS_DIR += Win32/Release
                message("Building a Win32_Release")
            }
        }
        else{
            error("Your OS architecture is $$QMAKE_HOST.arch .The library for this architecture hasn't been built")
        }
    }
}
else:error("Your OS is $$QMAKE_HOST.os . The library for this OS hasn't been built.")

OTHER_FILES +=

HEADERS += \
    resource.h
