HowTo create your own Extension plugin by Example:

Requirements:
- Visual Studio 2008
- QT 4.7.3 (Win32 and x64 compiled version), the below example expects these to be at "C:\Qt\4.7.3" and "4.7.3_X64"


Setup:
- Copy/Paste the folder "ExtensionPluginTemplate", rename the new folder to your own <ExtensionName> (do not use blank spaces!)
- Replace the substring "_extensionname_" from all file/(folder)-names with the <ExtensionName>
	ie. _extensionname__plugin_global.h becomes Retinotopic_Mapping_plugin_global.h if <ExtensionName> = "Retinotopic_Mapping"
- Replace all substrings "_extensionname_" found in the content of all files to <ExtensionName>
	ie. You can use UltraEdits replace in files to do this quickly
- Replace all substrings "_authorname_" found in the content of all files to <AuthorName>
- Replace all substrings "_organizationname_" found in the content of all files your <OrganizationName>

Testing:
- Open the <ExtensionName>Plugin.sln with Visual Studio 2008
- Build the solution

 	MainPluginName = "_extensionname_ plugin";
	MainPluginAuthorName = "_authorname_";
	MainPluginOrganizationName = "_organizationname_";

- Check needed include and lib files.
- This project makes use of a pluginInterface.h file witch should be the same version as used in the StimulGL program project.
- If you create a ExtensionInterface plugin you do not need to adjust anything if you create a DeviceInterface plugin the you should 
  change the:
    class <ExtensionName>Plugin : public QObject, ExtensionInterface
    to:
    class <ExtensionName>Plugin : public QObject, DeviceInterface
    in the file plugininterface.h! and 
    ExtensionInterface_H to DeviceInterface_H in the file plugininterface.h! and
    Q_INTERFACES(ExtensionInterface) to Q_INTERFACES(DeviceInterface) in the file <ExtensionName>Plugin.h
    
    
Howto integrate a staic plugin(lib)(VS2008 description)
- see above
From the Plugin Project
- change the projects configuration type to "Static Library (.lib)"
- Preprocessor definitions: 
	- Remove the QT_DLL
	- Add the QT_STATICPLUGIN
- Change the Library output file to:
	$(ProjectDir)..\..\..\Build_VS2008\$(ProjectName)\$(PlatformName)\$(ConfigurationName)\$(ProjectName)_$(PlatformName)_$(ConfigurationName).lib
- Change the Post Build event to(or only the below line):
	xcopy "$(TargetPath)" "$(ProjectDir)..\..\..\StaticLibs\$(PlatformName)\" /i /d /y
From the StimulGL project
- Add the following to the Linker->Input->Additional Dependencies:
	<ExtensionName>plugin_$(PlatformName)_$(ConfigurationName).lib (replace <ExtensionName> with your own name!)
- Add the following include to the mainwindow.cpp document:
	#include "..\Plugins\<ExtensionName>\<MainHeaderFile>.h"	(replace <ExtensionName> and <MainHeaderFile> with your own name!)
- Add the following line to the void MainWindow::setupDynamicPluginMenus() procedure (just before the line "foreach (QObject *plugin, QPluginLoader::staticInstances())":
	Q_IMPORT_PLUGIN(<ExtensionName>plugin)	(replace <ExtensionName> with your own name!)
- You might also need to change the solution project dependencies, StimulGL should the depend on the new library, this to make sure that the new library is build first.
	Also make StimulGL as the startup project!
- Validate the static load through the help->about StimulGL menu
